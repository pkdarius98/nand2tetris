/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0, 0, 0, 0, 0, 0, 0] if sel == 000
 *                            [0, in, 0, 0, 0, 0, 0, 0] if sel == 001
 *                            ...
 *                            [0, 0, 0, 0, 0, 0, 0, in] if sel == 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not(in=sel[0],out=notsel0);
    Not(in=sel[1],out=notsel1);
    Not(in=sel[2],out=notsel2);

    And(a=notsel0,b=notsel1,out=and00);
    And(a=sel[0],b=notsel1,out=and01);
    And(a=notsel0,b=sel[1],out=and10);
    And(a=sel[0],b=sel[1],out=and11);

    And(a=and00,b=notsel2,out=and000);
    And(a=and01,b=notsel2,out=and001);
    And(a=and10,b=notsel2,out=and010);
    And(a=and11,b=notsel2,out=and011);
    And(a=and00,b=sel[2],out=and100);
    And(a=and01,b=sel[2],out=and101);
    And(a=and10,b=sel[2],out=and110);
    And(a=and11,b=sel[2],out=and111);

    And(a=and000,b=in,out=a);
    And(a=and001,b=in,out=b);
    And(a=and010,b=in,out=c);
    And(a=and011,b=in,out=d);
    And(a=and100,b=in,out=e);
    And(a=and101,b=in,out=f);
    And(a=and110,b=in,out=g);
    And(a=and111,b=in,out=h);
}